
Motortest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  00000528  0000059c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000528  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000018ec  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cee  00000000  00000000  00001f90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a75  00000000  00000000  00002c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000144  00000000  00000000  000036f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000073e  00000000  00000000  00003838  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004a4  00000000  00000000  00003f76  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000441a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e2       	ldi	r30, 0x28	; 40
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 31       	cpi	r26, 0x10	; 16
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e1       	ldi	r26, 0x10	; 16
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 31       	cpi	r26, 0x10	; 16
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	6a d1       	rcall	.+724    	; 0x3f4 <main>
 120:	01 c2       	rjmp	.+1026   	; 0x524 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z12lcd_set_4bitv>:
	}
	if(digits>5)
	{
		lcd_wr_char('E');
	}
}
 124:	86 e6       	ldi	r24, 0x66	; 102
 126:	9e e0       	ldi	r25, 0x0E	; 14
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <_Z12lcd_set_4bitv+0x4>
 12c:	00 00       	nop
 12e:	40 98       	cbi	0x08, 0	; 8
 130:	41 98       	cbi	0x08, 1	; 8
 132:	80 e3       	ldi	r24, 0x30	; 48
 134:	88 b9       	out	0x08, r24	; 8
 136:	42 9a       	sbi	0x08, 2	; 8
 138:	ef ef       	ldi	r30, 0xFF	; 255
 13a:	f7 e4       	ldi	r31, 0x47	; 71
 13c:	31 97       	sbiw	r30, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <_Z12lcd_set_4bitv+0x18>
 140:	00 c0       	rjmp	.+0      	; 0x142 <_Z12lcd_set_4bitv+0x1e>
 142:	00 00       	nop
 144:	42 98       	cbi	0x08, 2	; 8
 146:	e6 e6       	ldi	r30, 0x66	; 102
 148:	fe e0       	ldi	r31, 0x0E	; 14
 14a:	31 97       	sbiw	r30, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <_Z12lcd_set_4bitv+0x26>
 14e:	00 00       	nop
 150:	40 98       	cbi	0x08, 0	; 8
 152:	41 98       	cbi	0x08, 1	; 8
 154:	88 b9       	out	0x08, r24	; 8
 156:	42 9a       	sbi	0x08, 2	; 8
 158:	ef ef       	ldi	r30, 0xFF	; 255
 15a:	f7 e4       	ldi	r31, 0x47	; 71
 15c:	31 97       	sbiw	r30, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <_Z12lcd_set_4bitv+0x38>
 160:	00 c0       	rjmp	.+0      	; 0x162 <_Z12lcd_set_4bitv+0x3e>
 162:	00 00       	nop
 164:	42 98       	cbi	0x08, 2	; 8
 166:	e6 e6       	ldi	r30, 0x66	; 102
 168:	fe e0       	ldi	r31, 0x0E	; 14
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <_Z12lcd_set_4bitv+0x46>
 16e:	00 00       	nop
 170:	40 98       	cbi	0x08, 0	; 8
 172:	41 98       	cbi	0x08, 1	; 8
 174:	88 b9       	out	0x08, r24	; 8
 176:	42 9a       	sbi	0x08, 2	; 8
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	97 e4       	ldi	r25, 0x47	; 71
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <_Z12lcd_set_4bitv+0x58>
 180:	00 c0       	rjmp	.+0      	; 0x182 <_Z12lcd_set_4bitv+0x5e>
 182:	00 00       	nop
 184:	42 98       	cbi	0x08, 2	; 8
 186:	e6 e6       	ldi	r30, 0x66	; 102
 188:	fe e0       	ldi	r31, 0x0E	; 14
 18a:	31 97       	sbiw	r30, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <_Z12lcd_set_4bitv+0x66>
 18e:	00 00       	nop
 190:	40 98       	cbi	0x08, 0	; 8
 192:	41 98       	cbi	0x08, 1	; 8
 194:	80 e2       	ldi	r24, 0x20	; 32
 196:	88 b9       	out	0x08, r24	; 8
 198:	42 9a       	sbi	0x08, 2	; 8
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	97 e4       	ldi	r25, 0x47	; 71
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <_Z12lcd_set_4bitv+0x7a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <_Z12lcd_set_4bitv+0x80>
 1a4:	00 00       	nop
 1a6:	42 98       	cbi	0x08, 2	; 8
 1a8:	08 95       	ret

000001aa <_Z14lcd_wr_commandh>:
 1aa:	98 b1       	in	r25, 0x08	; 8
 1ac:	9f 70       	andi	r25, 0x0F	; 15
 1ae:	98 b9       	out	0x08, r25	; 8
 1b0:	98 b1       	in	r25, 0x08	; 8
 1b2:	28 2f       	mov	r18, r24
 1b4:	20 7f       	andi	r18, 0xF0	; 240
 1b6:	92 2b       	or	r25, r18
 1b8:	98 b9       	out	0x08, r25	; 8
 1ba:	40 98       	cbi	0x08, 0	; 8
 1bc:	41 98       	cbi	0x08, 1	; 8
 1be:	42 9a       	sbi	0x08, 2	; 8
 1c0:	ef ef       	ldi	r30, 0xFF	; 255
 1c2:	f7 e4       	ldi	r31, 0x47	; 71
 1c4:	31 97       	sbiw	r30, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <_Z14lcd_wr_commandh+0x1a>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <_Z14lcd_wr_commandh+0x20>
 1ca:	00 00       	nop
 1cc:	42 98       	cbi	0x08, 2	; 8
 1ce:	98 b1       	in	r25, 0x08	; 8
 1d0:	9f 70       	andi	r25, 0x0F	; 15
 1d2:	98 b9       	out	0x08, r25	; 8
 1d4:	98 b1       	in	r25, 0x08	; 8
 1d6:	82 95       	swap	r24
 1d8:	80 7f       	andi	r24, 0xF0	; 240
 1da:	89 2b       	or	r24, r25
 1dc:	88 b9       	out	0x08, r24	; 8
 1de:	40 98       	cbi	0x08, 0	; 8
 1e0:	41 98       	cbi	0x08, 1	; 8
 1e2:	42 9a       	sbi	0x08, 2	; 8
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	97 e4       	ldi	r25, 0x47	; 71
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <_Z14lcd_wr_commandh+0x3e>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <_Z14lcd_wr_commandh+0x44>
 1ee:	00 00       	nop
 1f0:	42 98       	cbi	0x08, 2	; 8
 1f2:	08 95       	ret

000001f4 <_Z8lcd_initv>:
 1f4:	86 e6       	ldi	r24, 0x66	; 102
 1f6:	9e e0       	ldi	r25, 0x0E	; 14
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_Z8lcd_initv+0x4>
 1fc:	00 00       	nop
 1fe:	88 e2       	ldi	r24, 0x28	; 40
 200:	d4 df       	rcall	.-88     	; 0x1aa <_Z14lcd_wr_commandh>
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	d2 df       	rcall	.-92     	; 0x1aa <_Z14lcd_wr_commandh>
 206:	86 e0       	ldi	r24, 0x06	; 6
 208:	d0 df       	rcall	.-96     	; 0x1aa <_Z14lcd_wr_commandh>
 20a:	8e e0       	ldi	r24, 0x0E	; 14
 20c:	ce df       	rcall	.-100    	; 0x1aa <_Z14lcd_wr_commandh>
 20e:	80 e8       	ldi	r24, 0x80	; 128
 210:	cc cf       	rjmp	.-104    	; 0x1aa <_Z14lcd_wr_commandh>
 212:	08 95       	ret

00000214 <_Z11lcd_wr_charc>:
 214:	98 b1       	in	r25, 0x08	; 8
 216:	9f 70       	andi	r25, 0x0F	; 15
 218:	98 b9       	out	0x08, r25	; 8
 21a:	98 b1       	in	r25, 0x08	; 8
 21c:	28 2f       	mov	r18, r24
 21e:	20 7f       	andi	r18, 0xF0	; 240
 220:	92 2b       	or	r25, r18
 222:	98 b9       	out	0x08, r25	; 8
 224:	40 9a       	sbi	0x08, 0	; 8
 226:	41 98       	cbi	0x08, 1	; 8
 228:	42 9a       	sbi	0x08, 2	; 8
 22a:	ef ef       	ldi	r30, 0xFF	; 255
 22c:	f7 e4       	ldi	r31, 0x47	; 71
 22e:	31 97       	sbiw	r30, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <_Z11lcd_wr_charc+0x1a>
 232:	00 c0       	rjmp	.+0      	; 0x234 <_Z11lcd_wr_charc+0x20>
 234:	00 00       	nop
 236:	42 98       	cbi	0x08, 2	; 8
 238:	98 b1       	in	r25, 0x08	; 8
 23a:	9f 70       	andi	r25, 0x0F	; 15
 23c:	98 b9       	out	0x08, r25	; 8
 23e:	98 b1       	in	r25, 0x08	; 8
 240:	82 95       	swap	r24
 242:	80 7f       	andi	r24, 0xF0	; 240
 244:	89 2b       	or	r24, r25
 246:	88 b9       	out	0x08, r24	; 8
 248:	40 9a       	sbi	0x08, 0	; 8
 24a:	41 98       	cbi	0x08, 1	; 8
 24c:	42 9a       	sbi	0x08, 2	; 8
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	97 e4       	ldi	r25, 0x47	; 71
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <_Z11lcd_wr_charc+0x3e>
 256:	00 c0       	rjmp	.+0      	; 0x258 <_Z11lcd_wr_charc+0x44>
 258:	00 00       	nop
 25a:	42 98       	cbi	0x08, 2	; 8
 25c:	08 95       	ret

0000025e <_Z10lcd_stringPc>:
 25e:	cf 93       	push	r28
 260:	df 93       	push	r29
 262:	ec 01       	movw	r28, r24
 264:	88 81       	ld	r24, Y
 266:	88 23       	and	r24, r24
 268:	29 f0       	breq	.+10     	; 0x274 <_Z10lcd_stringPc+0x16>
 26a:	21 96       	adiw	r28, 0x01	; 1
 26c:	d3 df       	rcall	.-90     	; 0x214 <_Z11lcd_wr_charc>
 26e:	89 91       	ld	r24, Y+
 270:	81 11       	cpse	r24, r1
 272:	fc cf       	rjmp	.-8      	; 0x26c <_Z10lcd_stringPc+0xe>
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	08 95       	ret

0000027a <_Z10lcd_cursorcc>:
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	69 f0       	breq	.+26     	; 0x298 <_Z10lcd_cursorcc+0x1e>
 27e:	18 f4       	brcc	.+6      	; 0x286 <_Z10lcd_cursorcc+0xc>
 280:	81 30       	cpi	r24, 0x01	; 1
 282:	31 f0       	breq	.+12     	; 0x290 <_Z10lcd_cursorcc+0x16>
 284:	08 95       	ret
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	59 f0       	breq	.+22     	; 0x2a0 <_Z10lcd_cursorcc+0x26>
 28a:	84 30       	cpi	r24, 0x04	; 4
 28c:	69 f0       	breq	.+26     	; 0x2a8 <_Z10lcd_cursorcc+0x2e>
 28e:	08 95       	ret
 290:	8f e7       	ldi	r24, 0x7F	; 127
 292:	86 0f       	add	r24, r22
 294:	8a cf       	rjmp	.-236    	; 0x1aa <_Z14lcd_wr_commandh>
 296:	08 95       	ret
 298:	8f eb       	ldi	r24, 0xBF	; 191
 29a:	86 0f       	add	r24, r22
 29c:	86 cf       	rjmp	.-244    	; 0x1aa <_Z14lcd_wr_commandh>
 29e:	08 95       	ret
 2a0:	83 e9       	ldi	r24, 0x93	; 147
 2a2:	86 0f       	add	r24, r22
 2a4:	82 cf       	rjmp	.-252    	; 0x1aa <_Z14lcd_wr_commandh>
 2a6:	08 95       	ret
 2a8:	83 ed       	ldi	r24, 0xD3	; 211
 2aa:	86 0f       	add	r24, r22
 2ac:	7e cf       	rjmp	.-260    	; 0x1aa <_Z14lcd_wr_commandh>
 2ae:	08 95       	ret

000002b0 <_Z7forwardv>:
		
	}
}

void forward()
{
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
	PORTA=0x00;
 2b4:	12 b8       	out	0x02, r1	; 2
	PORTA=0x66;
 2b6:	86 e6       	ldi	r24, 0x66	; 102
 2b8:	82 b9       	out	0x02, r24	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ba:	8f ef       	ldi	r24, 0xFF	; 255
 2bc:	9f e8       	ldi	r25, 0x8F	; 143
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <_Z7forwardv+0xe>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <_Z7forwardv+0x14>
 2c4:	00 00       	nop
 2c6:	8e e1       	ldi	r24, 0x1E	; 30
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 2c8:	2c e8       	ldi	r18, 0x8C	; 140
 2ca:	30 e0       	ldi	r19, 0x00	; 0
		OCR1AL =i;	 //wheel 2
 2cc:	c8 e8       	ldi	r28, 0x88	; 136
 2ce:	d0 e0       	ldi	r29, 0x00	; 0
		OCR1BL = i;	 //wheel 4
 2d0:	aa e8       	ldi	r26, 0x8A	; 138
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
		OCR2A = i;      //wheel 1
 2d4:	43 eb       	ldi	r20, 0xB3	; 179
 2d6:	50 e0       	ldi	r21, 0x00	; 0
{
	PORTA=0x00;
	PORTA=0x66;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 2d8:	f9 01       	movw	r30, r18
 2da:	80 83       	st	Z, r24
		OCR1AL =i;	 //wheel 2
 2dc:	88 83       	st	Y, r24
		OCR1BL = i;	 //wheel 4
 2de:	8c 93       	st	X, r24
		OCR2A = i;      //wheel 1
 2e0:	fa 01       	movw	r30, r20
 2e2:	80 83       	st	Z, r24
 2e4:	ef ef       	ldi	r30, 0xFF	; 255
 2e6:	ff e8       	ldi	r31, 0x8F	; 143
 2e8:	31 97       	sbiw	r30, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <_Z7forwardv+0x38>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <_Z7forwardv+0x3e>
 2ee:	00 00       	nop
 2f0:	8b 5f       	subi	r24, 0xFB	; 251
void forward()
{
	PORTA=0x00;
	PORTA=0x66;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
 2f2:	87 33       	cpi	r24, 0x37	; 55
 2f4:	89 f7       	brne	.-30     	; 0x2d8 <_Z7forwardv+0x28>
		OCR1AL =i;	 //wheel 2
		OCR1BL = i;	 //wheel 4
		OCR2A = i;      //wheel 1
		_delay_ms(10);
	}
}
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <_Z8backwardv>:

void backward()
{
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
	PORTA=0x00;
 300:	12 b8       	out	0x02, r1	; 2
	PORTA=0x99;
 302:	89 e9       	ldi	r24, 0x99	; 153
 304:	82 b9       	out	0x02, r24	; 2
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	9f e8       	ldi	r25, 0x8F	; 143
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <_Z8backwardv+0xe>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <_Z8backwardv+0x14>
 310:	00 00       	nop
 312:	8e e1       	ldi	r24, 0x1E	; 30
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{
		OCR1CL = i;	 //wheel 3
 314:	2c e8       	ldi	r18, 0x8C	; 140
 316:	30 e0       	ldi	r19, 0x00	; 0
		OCR1AL = i;	 //wheel 2
 318:	c8 e8       	ldi	r28, 0x88	; 136
 31a:	d0 e0       	ldi	r29, 0x00	; 0
		OCR1BL = i;	 //wheel 4
 31c:	aa e8       	ldi	r26, 0x8A	; 138
 31e:	b0 e0       	ldi	r27, 0x00	; 0
		OCR2A = i;      //wheel 1
 320:	43 eb       	ldi	r20, 0xB3	; 179
 322:	50 e0       	ldi	r21, 0x00	; 0
	PORTA=0x00;
	PORTA=0x99;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{
		OCR1CL = i;	 //wheel 3
 324:	f9 01       	movw	r30, r18
 326:	80 83       	st	Z, r24
		OCR1AL = i;	 //wheel 2
 328:	88 83       	st	Y, r24
		OCR1BL = i;	 //wheel 4
 32a:	8c 93       	st	X, r24
		OCR2A = i;      //wheel 1
 32c:	fa 01       	movw	r30, r20
 32e:	80 83       	st	Z, r24
 330:	ef ef       	ldi	r30, 0xFF	; 255
 332:	ff e8       	ldi	r31, 0x8F	; 143
 334:	31 97       	sbiw	r30, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <_Z8backwardv+0x38>
 338:	00 c0       	rjmp	.+0      	; 0x33a <_Z8backwardv+0x3e>
 33a:	00 00       	nop
 33c:	8b 5f       	subi	r24, 0xFB	; 251
void backward()
{
	PORTA=0x00;
	PORTA=0x99;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
 33e:	87 33       	cpi	r24, 0x37	; 55
 340:	89 f7       	brne	.-30     	; 0x324 <_Z8backwardv+0x28>
		OCR1BL = i;	 //wheel 4
		OCR2A = i;      //wheel 1
		_delay_ms(10);
	}
	
}
 342:	df 91       	pop	r29
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <_Z11right_slidev>:


void right_slide()
{
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
	PORTA=0x00;
 34c:	12 b8       	out	0x02, r1	; 2
	PORTA=0xC3;
 34e:	83 ec       	ldi	r24, 0xC3	; 195
 350:	82 b9       	out	0x02, r24	; 2
 352:	8f ef       	ldi	r24, 0xFF	; 255
 354:	9f e8       	ldi	r25, 0x8F	; 143
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	f1 f7       	brne	.-4      	; 0x356 <_Z11right_slidev+0xe>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <_Z11right_slidev+0x14>
 35c:	00 00       	nop
 35e:	8e e1       	ldi	r24, 0x1E	; 30
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 360:	2c e8       	ldi	r18, 0x8C	; 140
 362:	30 e0       	ldi	r19, 0x00	; 0
		OCR1AL = i;	 //wheel 2
 364:	c8 e8       	ldi	r28, 0x88	; 136
 366:	d0 e0       	ldi	r29, 0x00	; 0
		OCR1BL = i;	 //wheel 4
 368:	aa e8       	ldi	r26, 0x8A	; 138
 36a:	b0 e0       	ldi	r27, 0x00	; 0
		OCR2A = i;      //wheel 1
 36c:	43 eb       	ldi	r20, 0xB3	; 179
 36e:	50 e0       	ldi	r21, 0x00	; 0
{
	PORTA=0x00;
	PORTA=0xC3;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 370:	f9 01       	movw	r30, r18
 372:	80 83       	st	Z, r24
		OCR1AL = i;	 //wheel 2
 374:	88 83       	st	Y, r24
		OCR1BL = i;	 //wheel 4
 376:	8c 93       	st	X, r24
		OCR2A = i;      //wheel 1
 378:	fa 01       	movw	r30, r20
 37a:	80 83       	st	Z, r24
 37c:	ef ef       	ldi	r30, 0xFF	; 255
 37e:	ff e8       	ldi	r31, 0x8F	; 143
 380:	31 97       	sbiw	r30, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <_Z11right_slidev+0x38>
 384:	00 c0       	rjmp	.+0      	; 0x386 <_Z11right_slidev+0x3e>
 386:	00 00       	nop
 388:	8b 5f       	subi	r24, 0xFB	; 251
void right_slide()
{
	PORTA=0x00;
	PORTA=0xC3;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
 38a:	87 33       	cpi	r24, 0x37	; 55
 38c:	89 f7       	brne	.-30     	; 0x370 <_Z11right_slidev+0x28>
		OCR1AL = i;	 //wheel 2
		OCR1BL = i;	 //wheel 4
		OCR2A = i;      //wheel 1
		_delay_ms(10);
	}
}
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	08 95       	ret

00000394 <_Z10left_slidev>:

void left_slide()
{
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
	PORTA=0x00;
 398:	12 b8       	out	0x02, r1	; 2
	PORTA=0x3C;
 39a:	8c e3       	ldi	r24, 0x3C	; 60
 39c:	82 b9       	out	0x02, r24	; 2
 39e:	8f ef       	ldi	r24, 0xFF	; 255
 3a0:	9f e8       	ldi	r25, 0x8F	; 143
 3a2:	01 97       	sbiw	r24, 0x01	; 1
 3a4:	f1 f7       	brne	.-4      	; 0x3a2 <_Z10left_slidev+0xe>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <_Z10left_slidev+0x14>
 3a8:	00 00       	nop
 3aa:	8e e1       	ldi	r24, 0x1E	; 30
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 3ac:	2c e8       	ldi	r18, 0x8C	; 140
 3ae:	30 e0       	ldi	r19, 0x00	; 0
		OCR1AL = i;	 //wheel 2
 3b0:	c8 e8       	ldi	r28, 0x88	; 136
 3b2:	d0 e0       	ldi	r29, 0x00	; 0
		OCR1BL = i;	 //wheel 4
 3b4:	aa e8       	ldi	r26, 0x8A	; 138
 3b6:	b0 e0       	ldi	r27, 0x00	; 0
		OCR2A = i;      //wheel 1
 3b8:	43 eb       	ldi	r20, 0xB3	; 179
 3ba:	50 e0       	ldi	r21, 0x00	; 0
{
	PORTA=0x00;
	PORTA=0x3C;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
	{OCR1CL = i;	 //wheel 3
 3bc:	f9 01       	movw	r30, r18
 3be:	80 83       	st	Z, r24
		OCR1AL = i;	 //wheel 2
 3c0:	88 83       	st	Y, r24
		OCR1BL = i;	 //wheel 4
 3c2:	8c 93       	st	X, r24
		OCR2A = i;      //wheel 1
 3c4:	fa 01       	movw	r30, r20
 3c6:	80 83       	st	Z, r24
 3c8:	ef ef       	ldi	r30, 0xFF	; 255
 3ca:	ff e8       	ldi	r31, 0x8F	; 143
 3cc:	31 97       	sbiw	r30, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <_Z10left_slidev+0x38>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <_Z10left_slidev+0x3e>
 3d2:	00 00       	nop
 3d4:	8b 5f       	subi	r24, 0xFB	; 251
void left_slide()
{
	PORTA=0x00;
	PORTA=0x3C;
	_delay_ms(10);
	for(int i=30;i<=50;i+=5)
 3d6:	87 33       	cpi	r24, 0x37	; 55
 3d8:	89 f7       	brne	.-30     	; 0x3bc <_Z10left_slidev+0x28>
		OCR1AL = i;	 //wheel 2
		OCR1BL = i;	 //wheel 4
		OCR2A = i;      //wheel 1
		_delay_ms(10);
	}
}
 3da:	df 91       	pop	r29
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <_Z4stopv>:


void stop()
{PORTA=0x00;
 3e0:	12 b8       	out	0x02, r1	; 2
	OCR1CL = 0;	 //wheel 3
 3e2:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
	OCR1AL = 0;	 //wheel 2
 3e6:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	OCR1BL = 0;	 //wheel 4
 3ea:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
	OCR2A = 0;      //wheel 1
 3ee:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
 3f2:	08 95       	ret

000003f4 <main>:
void left();
void stop();
int main(void)
{
	
	TCCR1A |= (1 << WGM10) | (1 << COM1A1) | (1 << COM1B1) |(1 << COM1C1);
 3f4:	e0 e8       	ldi	r30, 0x80	; 128
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	80 81       	ld	r24, Z
 3fa:	89 6a       	ori	r24, 0xA9	; 169
 3fc:	80 83       	st	Z, r24
	TCCR2A |= (1 << WGM20) | (1 << COM2A1) | (1 << WGM21);
 3fe:	e0 eb       	ldi	r30, 0xB0	; 176
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	83 68       	ori	r24, 0x83	; 131
 406:	80 83       	st	Z, r24
	
	
	TCCR1B |= (1 << WGM12) |(1 << CS10); // set no pre-scaling
 408:	e1 e8       	ldi	r30, 0x81	; 129
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	89 60       	ori	r24, 0x09	; 9
 410:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS20);
 412:	e1 eb       	ldi	r30, 0xB1	; 177
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	80 81       	ld	r24, Z
 418:	81 60       	ori	r24, 0x01	; 1
 41a:	80 83       	st	Z, r24
	DDRA=0xFF;                                                           // direction    port a
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	81 b9       	out	0x01, r24	; 1
	DDRB = 0xFF;                                                         //pwm           port b
 420:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;														//LCD            port c
 422:	87 b9       	out	0x07, r24	; 7
	PORTC &= 0x80;														//LCD
 424:	88 b1       	in	r24, 0x08	; 8
 426:	80 78       	andi	r24, 0x80	; 128
 428:	88 b9       	out	0x08, r24	; 8
	lcd_set_4bit();														//LCD
 42a:	7c de       	rcall	.-776    	; 0x124 <_Z12lcd_set_4bitv>
	lcd_init();															//LCD
 42c:	e3 de       	rcall	.-570    	; 0x1f4 <_Z8lcd_initv>
	stop();
 42e:	d8 df       	rcall	.-80     	; 0x3e0 <_Z4stopv>
 430:	2f ef       	ldi	r18, 0xFF	; 255
 432:	8f ef       	ldi	r24, 0xFF	; 255
 434:	93 eb       	ldi	r25, 0xB3	; 179
 436:	21 50       	subi	r18, 0x01	; 1
 438:	80 40       	sbci	r24, 0x00	; 0
 43a:	90 40       	sbci	r25, 0x00	; 0
 43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 440:	00 00       	nop
	_delay_ms(4000);
	while(1)
	{
		lcd_string("FWD"); //Forward
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	92 e0       	ldi	r25, 0x02	; 2
 446:	0b df       	rcall	.-490    	; 0x25e <_Z10lcd_stringPc>
		lcd_cursor(1,1);
 448:	61 e0       	ldi	r22, 0x01	; 1
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	16 df       	rcall	.-468    	; 0x27a <_Z10lcd_cursorcc>
		forward();
 44e:	30 df       	rcall	.-416    	; 0x2b0 <_Z7forwardv>
 450:	2f ef       	ldi	r18, 0xFF	; 255
 452:	8f ef       	ldi	r24, 0xFF	; 255
 454:	90 ee       	ldi	r25, 0xE0	; 224
 456:	21 50       	subi	r18, 0x01	; 1
 458:	80 40       	sbci	r24, 0x00	; 0
 45a:	90 40       	sbci	r25, 0x00	; 0
 45c:	e1 f7       	brne	.-8      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 460:	00 00       	nop
		_delay_ms(5000);
		stop();
 462:	be df       	rcall	.-132    	; 0x3e0 <_Z4stopv>
		PORTC |= (1<<PC3);
 464:	43 9a       	sbi	0x08, 3	; 8
 466:	2f ef       	ldi	r18, 0xFF	; 255
 468:	8f ef       	ldi	r24, 0xFF	; 255
 46a:	99 e5       	ldi	r25, 0x59	; 89
 46c:	21 50       	subi	r18, 0x01	; 1
 46e:	80 40       	sbci	r24, 0x00	; 0
 470:	90 40       	sbci	r25, 0x00	; 0
 472:	e1 f7       	brne	.-8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 474:	00 c0       	rjmp	.+0      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 476:	00 00       	nop
		_delay_ms(2000);
		PORTC &= ~(1<<PC3);
 478:	43 98       	cbi	0x08, 3	; 8
		
		lcd_string("BWD");  //Backward
 47a:	84 e0       	ldi	r24, 0x04	; 4
 47c:	92 e0       	ldi	r25, 0x02	; 2
 47e:	ef de       	rcall	.-546    	; 0x25e <_Z10lcd_stringPc>
		lcd_cursor(1,1);
 480:	61 e0       	ldi	r22, 0x01	; 1
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	fa de       	rcall	.-524    	; 0x27a <_Z10lcd_cursorcc>
		backward();
 486:	3a df       	rcall	.-396    	; 0x2fc <_Z8backwardv>
 488:	2f ef       	ldi	r18, 0xFF	; 255
 48a:	8f ef       	ldi	r24, 0xFF	; 255
 48c:	90 ee       	ldi	r25, 0xE0	; 224
 48e:	21 50       	subi	r18, 0x01	; 1
 490:	80 40       	sbci	r24, 0x00	; 0
 492:	90 40       	sbci	r25, 0x00	; 0
 494:	e1 f7       	brne	.-8      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 496:	00 c0       	rjmp	.+0      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 498:	00 00       	nop
		_delay_ms(5000);
		stop();
 49a:	a2 df       	rcall	.-188    	; 0x3e0 <_Z4stopv>
		PORTC |= (1<<PC3);
 49c:	43 9a       	sbi	0x08, 3	; 8
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	8f ef       	ldi	r24, 0xFF	; 255
 4a2:	99 e5       	ldi	r25, 0x59	; 89
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
		_delay_ms(2000);
		PORTC &= ~(1<<PC3);
 4b0:	43 98       	cbi	0x08, 3	; 8
		
		
		lcd_string("RSL");  //Right slide
 4b2:	88 e0       	ldi	r24, 0x08	; 8
 4b4:	92 e0       	ldi	r25, 0x02	; 2
 4b6:	d3 de       	rcall	.-602    	; 0x25e <_Z10lcd_stringPc>
		lcd_cursor(1,1);
 4b8:	61 e0       	ldi	r22, 0x01	; 1
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	de de       	rcall	.-580    	; 0x27a <_Z10lcd_cursorcc>
		right_slide();
 4be:	44 df       	rcall	.-376    	; 0x348 <_Z11right_slidev>
 4c0:	2f ef       	ldi	r18, 0xFF	; 255
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	90 ee       	ldi	r25, 0xE0	; 224
 4c6:	21 50       	subi	r18, 0x01	; 1
 4c8:	80 40       	sbci	r24, 0x00	; 0
 4ca:	90 40       	sbci	r25, 0x00	; 0
 4cc:	e1 f7       	brne	.-8      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4d0:	00 00       	nop
		_delay_ms(5000);
		stop();
 4d2:	86 df       	rcall	.-244    	; 0x3e0 <_Z4stopv>
		PORTC |= (1<<PC3);
 4d4:	43 9a       	sbi	0x08, 3	; 8
 4d6:	2f ef       	ldi	r18, 0xFF	; 255
 4d8:	8f ef       	ldi	r24, 0xFF	; 255
 4da:	99 e5       	ldi	r25, 0x59	; 89
 4dc:	21 50       	subi	r18, 0x01	; 1
 4de:	80 40       	sbci	r24, 0x00	; 0
 4e0:	90 40       	sbci	r25, 0x00	; 0
 4e2:	e1 f7       	brne	.-8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e6:	00 00       	nop
		_delay_ms(2000);
		PORTC &= ~(1<<PC3);
 4e8:	43 98       	cbi	0x08, 3	; 8
		
		
		lcd_string("LSL");  //Left slide
 4ea:	8c e0       	ldi	r24, 0x0C	; 12
 4ec:	92 e0       	ldi	r25, 0x02	; 2
 4ee:	b7 de       	rcall	.-658    	; 0x25e <_Z10lcd_stringPc>
		lcd_cursor(1,1);
 4f0:	61 e0       	ldi	r22, 0x01	; 1
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	c2 de       	rcall	.-636    	; 0x27a <_Z10lcd_cursorcc>
		left_slide();
 4f6:	4e df       	rcall	.-356    	; 0x394 <_Z10left_slidev>
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	90 ee       	ldi	r25, 0xE0	; 224
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	80 40       	sbci	r24, 0x00	; 0
 502:	90 40       	sbci	r25, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 506:	00 c0       	rjmp	.+0      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 508:	00 00       	nop
		_delay_ms(5000);
		stop();
 50a:	6a df       	rcall	.-300    	; 0x3e0 <_Z4stopv>
		PORTC |= (1<<PC3);
 50c:	43 9a       	sbi	0x08, 3	; 8
 50e:	2f ef       	ldi	r18, 0xFF	; 255
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	99 e5       	ldi	r25, 0x59	; 89
 514:	21 50       	subi	r18, 0x01	; 1
 516:	80 40       	sbci	r24, 0x00	; 0
 518:	90 40       	sbci	r25, 0x00	; 0
 51a:	e1 f7       	brne	.-8      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 51c:	00 c0       	rjmp	.+0      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51e:	00 00       	nop
		_delay_ms(2000);
		PORTC &= ~(1<<PC3);
 520:	43 98       	cbi	0x08, 3	; 8
void rotate_clockwise();
void rotate_anticlockwise();
void right();
void left();
void stop();
int main(void)
 522:	8f cf       	rjmp	.-226    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>

00000524 <_exit>:
 524:	f8 94       	cli

00000526 <__stop_program>:
 526:	ff cf       	rjmp	.-2      	; 0x526 <__stop_program>
